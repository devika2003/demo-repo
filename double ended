#include<stdio.h>
#include<stdlib.h>

#define size 50

int q[size];
int f = -1;
int r = -1;

void insertFront(int);
void insertRear(int);
int deleteFront();
int deleteRear();
void display();
int isEmpty();
int isFull();

void main() {
    int c, item, v;

    do {
        printf("\n1. Insert Front\n2. Insert Rear\n3. Delete Front\n4. Delete Rear\n5. Display\n6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &c);

        switch(c) {
            case 1:
                printf("Enter the element to insert at the front: ");
                scanf("%d", &v);
                insertFront(v);
                break;

            case 2:
                printf("Enter the element to insert at the rear: ");
                scanf("%d", &v);
                insertRear(v);
                break;

            case 3:
                item = deleteFront();
                if (item != -1) {
                    printf("The deleted value from the front is %d\n", item);
                }
                break;

            case 4:
                item = deleteRear();
                if (item != -1) {
                    printf("The deleted value from the rear is %d\n", item);
                }
                break;

            case 5:
                display();
                break;

            case 6:
                printf("Exiting the program. Goodbye!\n");
                break;

            default:
                printf("Invalid choice. Please enter a valid option.\n");
        }
    } while(c != 6);
}

int isEmpty() {
    return (f == -1);
}

int isFull() {
    return (f == (r + 1) % size);
}

void insertFront(int item) {
    if (isFull()) {
        printf("Deque is full. Cannot insert.\n");
    } else {
        if (f == -1) {
            f = 0;
            r = 0;
        } else if (f == 0) {
            f = size - 1;
        } else {
            f = f - 1;
        }
        q[f] = item;
        printf("%d inserted at the front.\n", item);
    }
}

void insertRear(int item) {
    if (isFull()) {
        printf("Deque is full. Cannot insert.\n");
    } else {
        if (f == -1) {
            f = 0;
            r = 0;
        } else if (r == size - 1) {
            r = 0;
        } else {
            r = r + 1;
        }
        q[r] = item;
        printf("%d inserted at the rear.\n", item);
    }
}

int deleteFront() {
    int item;
    if (isEmpty()) {
        printf("Deque is empty. Cannot delete.\n");
        return -1;
    } else {
        item = q[f];
        if (f == r) {
            f = -1;
            r = -1;
        } else {
            if (f == size - 1) {
                f = 0;
            } else {
                f = f + 1;
            }
        }
        return item;
    }
}

int deleteRear() {
    int item;
    if (isEmpty()) {
        printf("Deque is empty. Cannot delete.\n");
        return -1;
    } else {
        item = q[r];
        if (f == r) {
            f = -1;
            r = -1;
        } else {
            if (r == 0) {
                r = size - 1;
            } else {
                r = r - 1;
            }
        }
        return item;
    }
}

void display() {
    int i;
    if (isEmpty()) {
        printf("Deque is empty.\n");
    } else {
        printf("Deque elements: ");
        if (f <= r) {
            for (i = f; i <= r; i++) {
                printf("%d ", q[i]);
            }
        } else {
            for (i = f; i < size; i++) {
                printf("%d ", q[i]);
            }
            for (i = 0; i <= r; i++) {
                printf("%d ", q[i]);
            }
        }
        printf("\n");
    }
}
